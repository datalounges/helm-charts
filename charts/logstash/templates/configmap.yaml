apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "logstash.fullname" . }}
  labels:
    {{- include "logstash.labels" . | nindent 4 }}
data:
  logstash.conf: |
    input {
      {{- if .Values.inputs.heartbeat.create }}
      heartbeat {
        interval => 5
        message  => 'Hello from Logstash ðŸ’“'
      }
      {{- end }}
      {{- if .Values.inputs.beats.create }}
      beats {
        port        => {{ .Values.inputs.beats.port }}
        ssl_enabled => {{ .Values.inputs.beats.sslEnabled }}
        {{- if .Values.inputs.beats.sslEnabled }}
        ssl_certificate_authorities => [{{ join "," .Values.inputs.beats.sslCertificateAuthorities }}]
        ssl_certificate             => "{{ .Values.inputs.beats.sslCertificate }}"
        ssl_key                     => "{{ .Values.inputs.beats.sslKey }}"
        {{- end }}
      }
      {{- end }}
    }

    output {
      {{- if .Values.outputs.stdout.create }}
      stdout {
        codec => {{ .Values.outputs.stdout.codec }}
      }
      {{- end }}
      {{- if .Values.outputs.opensearch.create }}
      opensearch {
        user     => "{{ .Values.outputs.opensearch.user }}"
        password => "{{ .Values.outputs.opensearch.password }}"
        index    => "{{ .Values.outputs.opensearch.index }}"
        hosts    => [{{ join "," .Values.outputs.opensearch.hosts}}]
        {{- if .Values.outputs.opensearch.ssl }}
        cacert                       => "{{ .Values.outputs.opensearch.cacert }}"
        ssl_certificate_verification => {{ .Values.outputs.opensearch.sslCertificateVerification }}
        {{- end }}
      }
      {{- end }}
    }
